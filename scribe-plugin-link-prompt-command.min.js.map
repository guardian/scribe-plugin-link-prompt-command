{"version":3,"file":"scribe-plugin-link-prompt-command.min.js","mappings":"AAAAA,OAAA,YAAA,WAIA,QAAAC,GAAAC,GACA,MAAA,KAAAC,KAAAD,GAGA,OACAD,UAAAA,KCRAD,OAAA,qCAAA,YAAA,SAAAI,GAQA,MAAA,UAAAC,GACA,GAAAA,GAAAA,KAEA,OAAA,UAAAC,GACA,GAAAC,GAAA,GAAAD,GAAAE,IAAAC,QAAA,aAEAF,GAAAG,SAAA,IAEAH,EAAAI,QAAA,SAAAC,GACA,GAAAC,GACAC,EAAA,GAAAR,GAAAE,IAAAO,UACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAI,cAAA,SAAAC,GACA,MAAAA,GAAAT,WAAAU,KAAAV,UACAW,KAAAD,OAEAE,EAAAL,EAAAA,EAAAM,KAAA,EAQA,IAHAV,EAHAD,EAGAA,EAFAY,OAAAC,OAAA,gBAAAH,IAKAlB,EAAAH,UAAAY,GAEA,WADAW,QAAAE,MAAA,0BAIA,IAAArB,GAAAA,EAAAsB,WAAA,CACA,GAAAC,GAAAvB,EAAAsB,WAAAd,EAEA,KAAAe,EAAAC,MAEA,WADAL,QAAAE,MAAAE,EAAAE,SAAA,yBAcA,GATAb,IACAD,EAAAe,WAAAd,GACAH,EAAAA,UAAAkB,kBACAlB,EAAAA,UAAAmB,SAAAjB,IAMAH,EAAA,CAGA,GAAAqB,GAAA,gBACAC,EAAA,YACAC,EAAA,QACA,KAAAF,EAAA/B,KAAAU,KAAAsB,EAAAhC,KAAAU,KAAAuB,EAAAjC,KAAAU,GAGA,GAAA,IAAAV,KAAAU,GAAA,CACA,GAAAwB,GAAAb,OAAAc,QACA,wGAGAD,KACAxB,EAAA,UAAAA,OAEA,IAAA,QAAAV,KAAAU,GAAA,CACA,GAAA0B,GAAAf,OAAAc,QACA,sGAGAC,KACA1B,EAAA,OAAAA,OAEA,CACA,GAAA2B,GAAAhB,OAAAc,QACA,8FAGAE,KACA3B,EAAA,UAAAA,GAKAP,EAAAE,IAAAiC,cAAAC,UAAA/B,QAAAgC,KAAAvB,KAAAP,KAIAN,EAAAqC,WAAA,WAMA,GAAA9B,GAAA,GAAAR,GAAAE,IAAAO,SACA,SAAAD,EAAAI,cAAA,SAAAC,GACA,MAAAA,GAAAT,WAAAU,KAAAV,UACAW,KAAAD,QAGAd,EAAAuC,SAAAC,WAAAvC","sources":["../src/checks.js","../src/scribe-plugin-link-prompt-command.js"],"sourcesContent":["define('checks',[], function () {\n\n  'use strict';\n\n  function emptyLink(string) {\n    return /\\w/.test(string);\n  }\n\n  return {\n    emptyLink: emptyLink\n  };\n});\n\n","\ndefine('scribe-plugin-link-prompt-command',['./checks'], function (checks) {\n\n  /**\n   * This plugin adds a command for creating links, including a basic prompt.\n   */\n\n  'use strict';\n\n  return function (options) {\n    var options = options || {};\n\n    return function (scribe) {\n      var linkPromptCommand = new scribe.api.Command('createLink');\n\n      linkPromptCommand.nodeName = 'A';\n\n      linkPromptCommand.execute = function (passedLink) {\n        var link;\n        var selection = new scribe.api.Selection();\n        var range = selection.range;\n        var anchorNode = selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n\n        var initialLink = anchorNode ? anchorNode.href : '';\n\n        if (!passedLink)  {\n          link = window.prompt('Enter a link.', initialLink);\n        } else {\n          link = passedLink;\n        }\n\n        if(!checks.emptyLink(link)) {\n          window.alert('This link appears empty');\n          return;\n        }\n\n        if(options && options.validation) {\n          var validationResult = options.validation(link);\n\n          if(!validationResult.valid) {\n            window.alert(validationResult.message || 'The link is not valid');\n            return;\n          }\n        }\n\n        if (anchorNode) {\n          range.selectNode(anchorNode);\n          selection.selection.removeAllRanges();\n          selection.selection.addRange(range);\n        }\n\n        // FIXME: I don't like how plugins like this do so much. Is there a way\n        // to compose?\n\n        if (link) {\n          // Prepend href protocol if missing\n          // If a http/s or mailto link is provided, then we will trust that an link is valid\n          var urlProtocolRegExp = /^https?\\:\\/\\//;\n          var mailtoProtocolRegExp = /^mailto\\:/;\n          var telProtocolRegExp = /^tel\\:/;\n          if (! urlProtocolRegExp.test(link) && ! mailtoProtocolRegExp.test(link) && ! telProtocolRegExp.test(link) ) {\n            // For emails we just look for a `@` symbol as it is easier.\n            // For tel numbers check for + and numerical values\n            if (/@/.test(link)) {\n              var shouldPrefixEmail = window.confirm(\n                'The URL you entered appears to be an email address. ' +\n                'Do you want to add the required “mailto:” prefix?'\n              );\n              if (shouldPrefixEmail) {\n                link = 'mailto:' + link;\n              }\n            } else if (/\\+\\d+/.test(link)) {\n              var shouldPrefixTel = window.confirm(\n                'The URL you entered appears to be a telephone number.' +\n                'Do you want to add the required “tel:” prefix?'\n              );\n              if (shouldPrefixTel) {\n                link = 'tel:' + link;\n              }\n            } else {\n              var shouldPrefixLink = window.confirm(\n                'The URL you entered appears to be a link. ' +\n                'Do you want to add the required “http://” prefix?'\n              );\n              if (shouldPrefixLink) {\n                link = 'http://' + link;\n              }\n            }\n          }\n\n          scribe.api.SimpleCommand.prototype.execute.call(this, link);\n        }\n      };\n\n      linkPromptCommand.queryState = function () {\n        /**\n         * We override the native `document.queryCommandState` for links because\n         * the `createLink` and `unlink` commands are not supported.\n         * As per: http://jsbin.com/OCiJUZO/1/edit?js,console,output\n         */\n        var selection = new scribe.api.Selection();\n        return !! selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n      };\n\n      scribe.commands.linkPrompt = linkPromptCommand;\n    };\n  };\n\n});\n\n"],"names":["define","emptyLink","string","test","checks","options","scribe","linkPromptCommand","api","Command","nodeName","execute","passedLink","link","selection","Selection","range","anchorNode","getContaining","node","this","bind","initialLink","href","window","prompt","alert","validation","validationResult","valid","message","selectNode","removeAllRanges","addRange","urlProtocolRegExp","mailtoProtocolRegExp","telProtocolRegExp","shouldPrefixEmail","confirm","shouldPrefixTel","shouldPrefixLink","SimpleCommand","prototype","call","queryState","commands","linkPrompt"]}